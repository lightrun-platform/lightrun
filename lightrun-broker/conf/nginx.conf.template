events {
    worker_connections 1024;
}

http {


    upstream lightrun {
        zone lightrun 64k;
        server ${LIGHTRUN_SERVER}:443 max_fails=0;  # Set hostname of your server
        keepalive 2;
    }

    server {
      listen 443 ssl;
      #listen [::]:443;
      server_name _ ;
      ssl_certificate          /etc/nginx/conf.d/certs/tls.crt;
      ssl_certificate_key      /etc/nginx/conf.d/certs/tls.key;
      ssl_prefer_server_ciphers on;

      location / {
        client_body_buffer_size    512k;
        client_max_body_size       25m;


        proxy_connect_timeout                   90s;
        proxy_send_timeout                      90s;
        proxy_read_timeout                      90s;

        proxy_buffering                         on;
        proxy_buffer_size                       1m;
        proxy_buffers                           4 1m;

        proxy_max_temp_file_size                1024m;

        proxy_request_buffering                 on;
        proxy_http_version                      1.1;

        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;

        proxy_pass https://lightrun;
        proxy_ssl_verify              off;

        proxy_set_header        Host ${LIGHTRUN_SERVER};
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host ${CUSTOMER_ENDPOINT};

      }

      location /socket {
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        Host ${LIGHTRUN_SERVER};
        proxy_set_header        X-Forwarded-Host ${CUSTOMER_ENDPOINT};
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass https://lightrun;
        proxy_ssl_verify              off;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /usr/share/nginx/html;
      }
    }
}